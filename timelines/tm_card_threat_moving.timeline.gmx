<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>0</step>
    <event>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Появление на поле</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (card){ 
    move_towards_point(448,240,30)
    image_xscale = 1;
    image_yscale = 1;
    depth = x;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>35</step>
    <event>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Изменение очков игрока</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Реализация угрозы
// Цвета событий
var color_block = make_colour_rgb(170,200,255);
var color_evade = c_aqua;
var color_nothing = c_white;
var color_attack = make_colour_rgb(255,50,50);
var color_compens = c_yellow

// Общее кол-во атак (статистика)
global.statUnluck++

// #Избегание
var avoidParams = card.source + card.target;
if (ds_list_find_index(objDrawer.avoidList, avoidParams) != -1){
  effect_create_below(ef_smokeup,card.x,card.y,1, color_evade );
  show_message_floating(card.x+60,card.y, "избегание", 1,1, color_evade)
  return 0; 
} 

// #Блокирование
var rand = int64(random_range(1,100)); //Шанс атаки
show_debug_message("randThreat: "+ string(rand))
if ( rand &lt;= card.intense*100 ) 
{
  var randBlock = int64(random_range(1,100)); //Шанс блокирования
  // Добавление вероятности за каждую уязвимость
  if ( string_count( THREAT_Nature, card.source) == 1 )
    randBlock += vulnNat * 10;
  if ( string_count( THREAT_Human, card.source)  == 1 )
    randBlock += vulnHum * 10;
  if ( string_count( THREAT_Technic, card.source)== 1 )
    randBlock += vulnTech * 10;
    
  show_debug_message("randBlock: "+ string(randBlock))
  //Доступность
  if( string_pos(SERV_Avail,card.target) &gt; 0 ){ 
    if ( randBlock &lt;= (objDrawer.blockAvail - ds_list_mul_elems(blockAvailList))*100 ){
      effect_create_below(ef_ring,card.x,card.y,1,color_block );
      show_message_floating(card.x+60,card.y, "блокирование", 1,1,color_block)
      global.statLuck++
      return 0;
    } else {
      // Атака срабатывает (с учетом #Компенсирования)
      if (card.damage&gt;objDrawer.compAvail){
        objDrawer.availPoints -= card.damage - objDrawer.compAvail;
        effect_create_above(ef_firework,objDrawCIA.x+40,objDrawCIA.y,0.15, color_attack );
        show_message_floating(card.x+60,card.y, string_to_RUS(card.target)+": -"+string(card.damage)+"\#", 1,1,color_attack)
        //global.statUnluck++
      } else {
        effect_create_below(ef_ring ,card.x,card.y,1, color_compens );  //Эффект полного компенсирования
        show_message_floating(card.x+60,card.y, "компенсирование", 1,1, color_compens)
      }
    }
  }
  
  //Целостность
  if( string_pos(SERV_Integ,card.target) &gt; 0 ){ 
    if ( randBlock &lt;= (objDrawer.blockIntegr - ds_list_mul_elems(blockIntegrList))*100 ){
      effect_create_below(ef_ring,card.x,card.y,1, color_block );
      show_message_floating(card.x+60,card.y, "блокирование", 1,1,color_block)
      global.statLuck++
      return 0;
    } else { 
      // Атака срабатывает (с учетом #Компенсирования)
      if (card.damage&gt;objDrawer.compIntegr){
        objDrawer.integrPoints -= card.damage - objDrawer.compIntegr;
        effect_create_above(ef_firework,objDrawCIA.x+0,objDrawCIA.y,0.15, color_attack );
        show_message_floating(card.x+60,card.y, string_to_RUS(card.target)+": -"+string(card.damage)+"\#", 1,1,color_attack)
        //global.statUnluck++
      } else {
        effect_create_below(ef_ring ,card.x,card.y,1, color_compens );  //Эффект полного компенсирования
        show_message_floating(card.x+60,card.y, "компенсирование", 1,1, color_compens)
      }
    }
  }
  
  //Конфиденциальность
  if( string_pos(SERV_Confd,card.target) &gt; 0 ){
    if ( randBlock &lt;= (objDrawer.blockConf - ds_list_mul_elems(blockConfList))*100 ){
      effect_create_below(ef_ring,card.x,card.y,1,color_block );
      show_message_floating(card.x+60,card.y, "блокирование", 1,1,color_block)
      global.statLuck++
      return 0;
    } else { 
      // Атака срабатывает (с учетом #Компенсирования)
      if (card.damage&gt;objDrawer.compConf){
        objDrawer.confPoints -= card.damage - compConf; 
        effect_create_above(ef_firework,objDrawCIA.x-40,objDrawCIA.y,0.15, color_attack );
        show_message_floating(card.x+60,card.y, string_to_RUS(card.target)+": -"+string(card.damage)+"\#", 1,1,color_attack)
        //global.statUnluck++
      } else {
        effect_create_below(ef_ring ,card.x,card.y,1, color_compens ); //Эффект полного компенсирования
        show_message_floating(card.x+60,card.y, "компенсирование", 1,1, color_compens)
      }
    }
  }
} else {
  // Карта не атаковала
  effect_create_above(ef_ring ,card.x,card.y,1, color_nothing );
  show_message_floating(card.x+60,card.y, "промах", 1,1,color_nothing)
  global.statLuck++
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>60</step>
    <event>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Исчезание с поля</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message("card move No:"+string(cardIndex));
with (card) {
    move_towards_point(xstart,ystart,30)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>100</step>
    <event>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Конец хода</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Конец хода (если карты угроз все обработаны)
if (cardIndex == count) {
  objButResume.image_blend = c_white;
  // Создаем карту угрозы
  with objSpawnerThreat event_user(0);
  // Создаем карту защиты
  with objSpawnerDef event_user(0);
  // Добавляем прибыль к бюджету
  objDrawer.cash += objDrawer.cashDelta;
  global.statTotalReven += objDrawer.cashDelta;
  // Изменение прибыли на основе очков безопасности
  objDrawer.cashDelta = ceil(
    (objDrawer.availPoints  
    +objDrawer.integrPoints
    +objDrawer.confPoints)/30
  )
  global.statTurns++;
}

// Проверка проигрыша
if (objDrawer.availPoints  &lt; 1 ||
    objDrawer.integrPoints &lt; 1 ||
    objDrawer.confPoints   &lt; 1 ){
    if objDrawer.availPoints   &lt; 1 global.statMostVuln = SERV_Avail;
    if objDrawer.integrPoints  &lt; 1 global.statMostVuln = SERV_Integ;
    if objDrawer.confPoints    &lt; 1 global.statMostVuln = SERV_Confd;
    show_message("Конец игры");
    room_goto_next();
    //game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
</timeline>
