<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dragging = false;

beforeDragX = x
beforeDragY = y
inShop = true;
cStartX = xstart
cStartY = ystart
mDiffX = 0
mDiffY = 0
image_speed = 0;

//
randomize()
name = choose("Firewall","Antivirus","HIPS","Backup","DLP","Policy","Rules")    //Название
vuln = choose(THREAT_Technic, THREAT_Human, THREAT_Nature)      //Усиление уязвимостей (техника, люди, природа)
target = choose(
  SERV_Confd,SERV_Integ,SERV_Avail,
  "ca","ci","ia","cia"
)                                                     //Что защищает

type = choose(
  PROTECT_TYPE_Block, 
  PROTECT_TYPE_Avoid,
  PROTECT_TYPE_Comp 
);                                                    //Тип защиты (Блок, Избег, Компенсация)
switch(type){
  // Блокирование
  case PROTECT_TYPE_Block: 
    global.statBlockCount++
    // Вероятность защиты
    value = choose(1,2,3);
    cost = floor(( 1 + floor(string_length(target)/3) + value ) * objDrawer.cashDelta * 0.3);//value=index
    valuesArray[1] = 0.2;
    valuesArray[2] = 0.5;
    valuesArray[3] = 0.75;
    value = valuesArray[value];
    image_index = 1;
    break;
  // Избегание
  case PROTECT_TYPE_Avoid:
    global.statAvoidCount++
    // Чего избегаем:
    target = choose(SERV_Confd, SERV_Integ, SERV_Avail);
    value = choose(THREAT_Technic, THREAT_Human, THREAT_Nature)+target; //ИСТОЧНИК + ЦЕЛЬ        
    cost = ( 2 + floor(string_length(target)/3))*objDrawer.cashDelta;   
    image_index = 2;                     
    break;
  // Компенсация (через attack-)
  case PROTECT_TYPE_Comp:
    global.statCompCount++ 
    // Величина защиты
    value = objDrawer.cashDelta*choose(1,2,3);// cash/3
    //target = см.выше 
    vuln = "";
    cost = ( 3 + floor(string_length(target)/3) + value/objDrawer.cashDelta)  * objDrawer.cashDelta;//2
    image_index = 3;
    break;
}

// Двигаем все карты вниз (для новой), если игра начата
if objDrawer.gameState == GS_Started{
  repeats = 20;
  alarm[0]=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Плавное движение карт</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var delay = 1;
if repeats &gt; 0 {
  event_perform(ev_mouse ,ev_mouse_wheel_down )
  alarm[0] = delay;
  repeats--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dragging {
  x = mouse_x - mDiffX;
  y = mouse_y - mDiffY;
  depth =- 999
  image_xscale = 1.05
  image_yscale = 1.05;
} else {
  image_xscale = 1
  image_yscale = 1;
  depth = -y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var step = 3
objSpawnerDef.y += step; // двигаем спавнер
for(i=0; i&lt;instance_number(objCardDef );i++){
  var ob = instance_find(objCardDef ,i);
  ob.cStartY += step; // двигаем стартовую точку
  if ( ob.inShop ) {
      ob.y += step; // двигаем карты в магазине
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var step = 3;
objSpawnerDef.y -= step; // двигаем спавнер
for(i=0; i&lt;instance_number(objCardDef );i++){
  var ob = instance_find(objCardDef ,i);
  ob.cStartY -= step; // двигаем стартовую точку
  if ( ob.inShop ) {
    ob.y -= step;     // двигаем сами карты в магазине
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dragging {
  dragging = false
  if ( !inShop ) // если в пуле
    move_snap(64,64)
  
  // Если бросили в свой пул (в прямоугольник)
  if(x &lt; objMyCardsPool.x+440 &amp;&amp; y &lt; objMyCardsPool.y+270) &amp;&amp; 
    (x &gt; objMyCardsPool.x &amp;&amp; y &gt; objMyCardsPool.y+17){
    if(inShop==true){
      // Покупка
      card_buy()
      //move_snap(64,64)
  
    }
  // Если бросили куда-то еще
  } else {
    x = beforeDragX
    y = beforeDragY
    // Продажа
    if(inShop==false)
    {
        card_sell()
        //move_snap(64,64)
  
    }
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;

for (i = 0; i &lt; instance_number(objCardDef); i += 1){
   ob = instance_find(objCardDef,i);
   // Если кто-то еще "тащится", то себя не тащим
   if (ob != id &amp;&amp; ob.dragging == true){
     return false;
   }
}
//else
beforeDragX = x
beforeDragY = y
mDiffX = mouse_x - x;
mDiffY = mouse_y - y;
dragging = true
/*
for (i = 0; i &lt; instance_number(objCardDef); i += 1){
  ob = instance_find(objCardDef,i);
  if (ob != id &amp;&amp; ob.dragging == false)
    if (ob.depth &lt;= depth){
      ob.beforeDragX = ob.x
      ob.beforeDragY = ob.y
      ob.mDiffX = mouse_x - ob.x;
      ob.mDiffY = mouse_y - ob.y;
      ob.dragging = true
      break;
    }
}
*/





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( dragging )
  draw_sprite_ext(sprCard,image_index,x,y,image_xscale,image_yscale,0,make_colour_rgb(200,255,200),true)
else
  draw_self();
  
if ( inShop == false )
  draw_set_colour(c_black)
else
  draw_set_colour(c_gray)
draw_set_font(fontRus);

draw_text(x-35,y-30-20,string(name))
draw_text(x-35,y-15-20,"Цена: "+string(cost)+"$")
switch(type){
  case PROTECT_TYPE_Block: draw_text(x-35,y-20,"Блок: "+string(value*100)+"%"); break;
  case PROTECT_TYPE_Avoid: draw_text(x-35,y-20,"Избег.: "+string_to_RUS(string_char_at(value,1))+string_to_RUS(string_char_at(value,2))); break;
  case PROTECT_TYPE_Comp:  draw_text(x-35,y-20,"Компен.: "+string(value)+"\#"); break;
}
draw_text(x-35,y+15-20,"Цель: "+string_to_RUS(target))
draw_text(x-35,y+30-20,"Уязв.: "+string_to_RUS(vuln))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
